import{Ab as D,Bb as T,Cb as S,Fb as E,Ib as v,kb as h,nb as w,qb as a,rb as m,sb as c,tb as u,ub as f,wb as R,zb as y}from"./chunk-PGUYAPD4.js";import{a as n,da as g,h as s,ia as d}from"./chunk-7ZC2CAVG.js";var I=class l{constructor(t,e){this.firestore=t;this.storage=e}createTopic(t){return s(this,null,function*(){try{let e=a(this.firestore,"topics");t.createdOn=new Date().toISOString().slice(0,16),t.updatedOn=new Date().toISOString().slice(0,16);let r=yield w(e,t);return console.log("Topic created with ID:",r.id),r.id}catch(e){throw console.error("Error creating topic:",e),e}})}getAllTopics(){return s(this,null,function*(){try{let t=a(this.firestore,"topics"),e=yield f(t),r=[];return e.forEach(o=>{let i=o.data();r.push(n({id:o.id},i))}),r}catch(t){return console.error("Error fetching all topics:",t),[]}})}getTopicById(t){return s(this,null,function*(){try{let e=c(this.firestore,"topics",t),r=yield u(e);if(r.exists())return n({id:r.id},r.data());throw console.error("Topic not found with ID:",t),new Error("Topic not found")}catch(e){throw console.error("Error fetching topic by ID:",e),e}})}updateTopic(t,e){return s(this,null,function*(){try{let r=c(this.firestore,"topics",t);e.updatedOn=new Date().toISOString().slice(0,16),yield y(r,e),console.log("Topic updated successfully:",t)}catch(r){throw console.error("Error updating topic:",r),r}})}deleteTopic(t){return s(this,null,function*(){try{let e=c(this.firestore,"topics",t);yield m(e),console.log("Topic deleted successfully:",t)}catch(e){throw console.error("Error deleting topic:",e),e}})}deleteReply(t,e){return s(this,null,function*(){try{let r=c(this.firestore,"topics",t),o=yield u(r);if(o.exists()){let i=o.data(),p=this.deleteReplyRecursively(i.replies,e);yield y(r,{replies:p}),console.log("Reply deleted successfully:",e)}else throw console.error("Topic not found with ID:",t),new Error("Topic not found")}catch(r){throw console.error("Error deleting reply:",r),r}})}deleteReplyRecursively(t,e){return t.map(r=>r.id===e?null:(r.replies&&r.replies.length>0&&(r.replies=this.deleteReplyRecursively(r.replies,e).filter(o=>o!==null)),r)).filter(r=>r!==null)}uploadImage(t,e="topic_images/"){return s(this,null,function*(){let r=`${e}${new Date().getTime()}_${t.name}`,o=T(this.storage,r);try{return yield v(o,t),yield E(o)}catch(i){throw console.error("Error uploading image:",i),i}})}getTopicsCreatedByUser(t){return s(this,null,function*(){try{let e=R(a(this.firestore,"topics"),D("createdBy","==",t)),r=yield f(e),o=[];return r.forEach(i=>{let p=i.data();o.push(n({id:i.id},p))}),o}catch(e){return console.error("Error fetching topics created by user:",e),[]}})}static \u0275fac=function(e){return new(e||l)(d(h),d(S))};static \u0275prov=g({token:l,factory:l.\u0275fac,providedIn:"root"})};export{I as a};
