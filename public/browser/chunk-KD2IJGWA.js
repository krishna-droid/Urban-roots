import{Ab as F,Cb as C,Fb as S,Hb as j,Ib as L,S as p,U,V as c,W as l,X as y,Y as w,Z as I,_ as g,kb as P,qb as h,s as f,sb as a,tb as R,ub as D,wb as v,xb as A,yb as E,zb as m}from"./chunk-PGUYAPD4.js";import{da as d,h as s,ia as n}from"./chunk-7ZC2CAVG.js";var b=class u{constructor(e,r,t,o){this.auth=e;this.firestore=r;this.router=t;this.storage=o;l(this.auth,i=>{i?(this.currentUser=i,this.router.navigate(["/user/dashboard"])):this.router.navigate(["/"])})}currentUser;signup(e,r,t){return s(this,null,function*(){try{let i=(yield U(this.auth,e,r)).user;yield g(i,{displayName:t});let _=a(h(this.firestore,"usercollection"),i.uid);yield E(_,{email:e,name:t,createdOn:A()}),console.log("User registered and document created:",i)}catch(o){throw o}})}login(e,r){return s(this,null,function*(){let t=c();return w(t,e,r)})}logout(){let e=c();I(e),this.router.navigate(["/"])}forgotPassword(e){return s(this,null,function*(){let r=c();return y(r,e)})}getUserId(){return this.currentUser?this.currentUser.uid:null}getUsername(){return s(this,null,function*(){return this.currentUser?this.currentUser.displayName:null})}fetchProfileImageUrl(){return s(this,null,function*(){let e=this.getUserId();if(!e)return console.error("User not authenticated. Cannot fetch profile image URL."),null;try{let r=a(this.firestore,"usercollection",e),t=yield R(r);return t.exists()&&t.data().profileImageUrl||null}catch(r){return console.error("Error fetching profile image URL:",r),null}})}uploadProfileImage(e){return s(this,null,function*(){let r=`profile_images/${this.getUserId()}_${new Date().getTime()}_${e.name}`,t=j(this.storage,r);try{return yield L(t,e),yield S(t)}catch(o){throw console.error("Error uploading profile image:",o),o}})}updateProfileImageUrlInFirestore(e){return s(this,null,function*(){try{let r=a(this.firestore,"usercollection",this.getUserId());yield m(r,{profileImageUrl:e})}catch(r){throw console.error("Error updating profile image URL in Firestore:",r),r}})}updateUsername(e){return s(this,null,function*(){try{let r=yield this.getCurrentUser();if(r){yield g(r,{displayName:e});let t=a(this.firestore,"usercollection",this.getUserId());yield m(t,{name:e})}else console.error("User not authenticated. Cannot update username.")}catch(r){throw console.error("Error updating username:",r),r}})}getCurrentUser(){return new Promise(e=>{if(this.currentUser)e(this.currentUser);else{let r=l(this.auth,t=>{this.currentUser=t,e(t),r()})}})}getUsernamesFromUids(e){return s(this,null,function*(){if(!e||e.length===0)return[];try{let r=v(h(this.firestore,"usercollection"),F("__name__","in",e));return(yield D(r)).docs.map(i=>i.data().name||"Anonymous")}catch(r){return console.error("Error fetching usernames:",r),[]}})}static \u0275fac=function(r){return new(r||u)(n(p),n(P),n(f),n(C))};static \u0275prov=d({token:u,factory:u.\u0275fac,providedIn:"root"})};export{b as a};
